// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     TSTypesJenny
//     PluginTsTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

import * as common from '@grafana/schema';

/**
 * Select the pie chart display style.
 */
export enum PieChartType {
  Donut = 'donut',
  Pie = 'pie',
}

/**
 * Select how to sort the pie slices.
 *  - Descending - The slices are sorted in descending value going clockwise (default).
 *  - Ascending - The slices are sorted in ascending value going clockwise.
 *  - None - The slices are not sorted and the order of the query/transform is maintained.
 */
export enum PieChartSortOptions {
  Descending = 'descending',
  Ascending = 'ascending',
  None = 'none',
}

/**
 * Select labels to display on the pie chart.
 *  - Name - The series or field name.
 *  - Percent - The percentage of the whole.
 *  - Value - The raw numerical value.
 */
export enum PieChartLabels {
  Name = 'name',
  Percent = 'percent',
  Value = 'value',
}

/**
 * Select values to display in the legend.
 *  - Percent: The percentage of the whole.
 *  - Value: The raw numerical value.
 */
export enum PieChartLegendValues {
  Percent = 'percent',
  Value = 'value',
}

export interface PieChartLegendOptions extends common.VizLegendOptions {
  values: Array<PieChartLegendValues>;
}

export const defaultPieChartLegendOptions: Partial<PieChartLegendOptions> = {
  values: [],
};

export interface Options extends common.OptionsWithTooltip, common.SingleStatBaseOptions {
  displayLabels: Array<PieChartLabels>;
  legend: PieChartLegendOptions;
  pieSorting: PieChartSortOptions;
  pieType: PieChartType;
}

export const defaultOptions: Partial<Options> = {
  displayLabels: [],
};

export interface FieldConfig extends common.HideableFieldConfig {}
